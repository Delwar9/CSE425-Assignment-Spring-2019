                   

                                                                          Assignment

Prepared by	Prepared by
Name:Sohanur Rahman
Id: 1510464642
Name: Delwar Hosen
Id: 1511354042
	Dr Kamruddin Nur
Adjunct Associate Professor
North South University

                                                             	    






Comparison of three programming languages (Java, Python, Shell Script)

Characteristics:
1) Feature Multiplicity
2) Operator Overloading
3) Function Overloading
4) Function Overriding
5) Data Type
6) Function Overloading
7) Support for Abstraction
8) Expressivity
9) Type Checking
10) Exception Handling
Feature Multiplicity:  Feature multiplicity means providing more than one way to do a specific operation. 
Languages	Supports for feature multiplicity	Example
Java	Yes, java supports feature multiplicity. For a particular operation java allows multiple ways  	i = i+1;
i++;
++i;
i+=1 ;
Python	Relatively simple with little feature multiplicity 	
Shell Script	We didn’t find anything like  shell script support feature multiplicity or not	

Operator Overloading: C++ gives freedom to do operator overloading which is a huge important concept.
Through operator overloading for user-defined types it’s possible to change the way of operator works. It means for user-defined types (ex: objects) we can redefine the way of operator works. Like using “+” operator to add integers and use the same operator for concatenate two strings of two objects.
Languages	Support for operator overloading	Example
Java	For maintaining simplicity, cleanliness & to avoid programming errors java doesn’t give freedom to programmers for operator overloading unlike C++	We can’t use “+” operator for both adding numbers & concatenating Strings of objects
Python	Python supports operator overloading too	print(1+2)
print(“Hello”+”World!”)
Shell	There is no operator overloading in shell script	

Function Overloading: Function overloading is a special feature where programmer have the right to use the same function (method) with different implementation. For instance, a function with the same name used in two different places with different parameters. 

Languages	Support for function overloading	Example
Java	Yes, Java support function overloading. In Java, it’s called method overloading.	i) public void display(char c)
ii) public void display(char c, int number)
Python	Although python don’t support function overloading there is a way doing that with the help of default argument	def add(a,b,c=None):
if c is None:
    print(a+b)
else
    print(a+b+c)

add(4,5,6);
add(8,9);

Shell	Shell Script don’t support function overloading	




Function Overriding: Function overloading is a special feature that allows programmers to use the same implementation with the same name & parameters of a particular method of a child class which is already provided by its parent class

Languages	Support for function overriding	Example
Java	In java, this particular action is called method overriding. Sub classes are allowed to use the same implementation of a method which is provided by super class	 Class GeometricObject{
void show(){System.out.println(“This is Geometric Object”);}
}
//Creating a child class
Class Circle extends GeometricObject{
Circle c = new Circle;
c.show();
}
Python	Python supports function overriding also	class GeoObject(object)
       def _init_(number):
        number.value = 5
        def get_area(number):
        return number.value

class Square(GeoObject):
>>> c = Square();
>>> c.get_area();
Shell		


Data Type: There are some difference noticed in these three particular language based on data types such as boolean. This is shown on the table below: 

Languages	Support	Example
Java	Java supports boolean data type. boolean data type represents true or false for a particular boolean variable	 boolean b1 = true;
Python	Python doesn’t support Boolean data type	
Shell	Shell also doesn’t support boolean data type 	

Support for Abstraction: Abstraction is one of the central principles. Abstraction of data basically defines 
The reduction of a specific body of the codes by the programmer in order to maintain simplicity & reduce complexity. 
Languages	Support	Example
Java	Java provides abstraction classes & interfaces. It is possible to achieve 100% abstraction using interfaces. Java also allows abstract methods	abstract class GeometricObJect(){

abstract double area;
public abstract String to String();
}
Python	Python also supports abstraction 	from abc import ABC, abstractmethod
class Polygon(ABC): 
  
    # abstract method 
    def noofsides(self): 
        pass

Shell	Shell Script supports abstraction too 	

Expressivity: Expressivity means easy to write code that’s easy to understand, both for the compiler and for a human reader
Languages	Support	Example
Java	The two main factors that make sure expressiveness:
1- intuitively readable constructs
2- lack of boilerplate code.
Java has both.	3.times {
println  ‘Hello World!”
}
for(int i = 0; i<3 ; i++){
System.out.println(“Hello World!);
}


Python	Python is also an expressive language. A single line of Python code can do more than a single line in most other languages 	var2,var1 = var1,var2
Shell	In general, Shell Script tend to be mid-range in expressiveness 	


Type Checking:
Languages	Support	Example
Java	Strongly typed	int a = 10;
String s = “Hello”
Python	Python is dynamically typed. It means python interpreter does type checking only as code runs 	>>>if Flase:
           1+”two” #if this line won’t run there will be no type error

>>> 1+ “two” #this will generate type error
Shell	Loosely typed on Runtime	x=20;

Exception Handling: Exception handling is a process to respond over the error detection & occurrence of the errors. An exception breaks the normal flow of a execution. Exception handling catch the exception & modify the execution based on exceptions so that the program can’t crash 
Languages	Support	Example
Java	Java supports a powerful exception handling with throwable class which has various subclasses. Java use some keywords to handle exception such as try,catch,finally,throw,throws 	Public static exceptionTest{
try{
int data = 100/0;
}
catch(ArithmaticException ex){
System.out.println(ex)}
}
Python	When a mistake happens or special case as we call it , python will ordinarily stop & generate an error message 	try:
   print(b);
except:
   print(“An exception occured”);
Shell	Shell Script don’t support exception handling but there is a similar behavior we could achieve using && ||	a_command || fallback_command

Some other similarities & differences we found doing the coding part of the assignment. For instance, java required a lot of codes to complete the tasks. Even to read the csv file in java we have to call Bufferreader & Filereader class which make it more complex & required quiet a lot time to do the simple job. While python there is some library like pandas, numpy which help to read data from CSV file and others method like .title() helps return a cased version of string. And ShellScript is quite easy to read and write for this program. Here we used grep and awk to manipulate strings.
Another part is, although java is case sensitive but there is a method in java String class called toLowerCase() which helped to ignore case sensitivity. But in shell it’s not possible & we had to write exact strings maintaining case sensitivity provided in the csv file. So in our opinion, to do this types tasks with these kind of datasheets containing huge number of datas implementing shell script is better & time saving.
